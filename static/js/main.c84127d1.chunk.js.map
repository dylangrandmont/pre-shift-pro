{"version":3,"sources":["Form.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","withTheme","react_default","a","createElement","Grid_default","container","spacing","item","xs","TextField_default","label","margin","fullWidth","type","InputLabelProps","shrink","multiline","rowsMax","FormLabel_default","build_default","penColor","canvasProps","width","height","className","Button_default","App","state","mobileOpen","handleDrawerToggle","_this","setState","_this$props","this","props","classes","drawer","toolbar","Divider_default","List_default","map","text","index","ListItem_default","button","key","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","root","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","IconButton_default","color","aria-label","onClick","menuButton","Menu_default","Typography_default","variant","noWrap","Hidden_default","smUp","implementation","Drawer_default","anchor","direction","open","onClose","paper","drawerPaper","xsDown","content","src_Form","React","Component","display","Object","defineProperty","breakpoints","up","flexShrink","marginLeft","concat","marginRight","mixins","flexGrow","padding","unit","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c84127d1.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SignatureCanvas from 'react-signature-canvas'\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst styles = theme => ({\n});\n\nfunction Form() {\n  return (\n      <div>\n        <Grid container spacing={16}>\n        <Grid item xs={6}>\n            <TextField\n            label=\"Company\"\n            margin=\"normal\"\n            fullWidth\n            />\n        </Grid>\n        <Grid item xs={6}>\n            <TextField\n            label=\"Date\"\n            type=\"date\"\n            margin=\"normal\"\n            fullWidth\n            InputLabelProps={{\n                shrink: true,\n            }}\n            />\n        </Grid>\n        </Grid>\n        <Grid container spacing={16}>\n        <Grid item xs={6}>\n            <TextField\n            label=\"Location\"\n            margin=\"normal\"\n            fullWidth\n            />\n        </Grid>\n        <Grid item xs={6}>\n            <TextField\n            label=\"Shift\"\n            margin=\"normal\"\n            fullWidth\n            />\n        </Grid>\n        </Grid>\n        <Grid container>\n        <Grid item xs={6}>\n            <TextField\n            label=\"Equipment #\"\n            margin=\"normal\"\n            fullWidth\n            />\n        </Grid>\n        <Grid item xs={6}>\n            <TextField\n            label=\"Type\"\n            margin=\"normal\"\n            fullWidth\n            />\n        </Grid>\n        </Grid>\n        <TextField\n        label=\"Explanation of Defects\"\n        margin=\"normal\"\n        fullWidth\n        multiline\n        rowsMax=\"4\"\n        />\n\n        <Grid container>\n        <TextField\n            label=\"Operator Name\"\n            margin=\"normal\"\n        />\n        <FormLabel>\n            Operator Signature\n        </FormLabel>\n        <SignatureCanvas\n            penColor='green'\n            canvasProps={{width: 400, height: 80, className: \"canvas\"}}\n        />\n        </Grid>\n\n        <Grid container>\n        <TextField\n            label=\"Mechanic Name\"\n            margin=\"normal\"\n        />\n        <FormLabel>\n            Mechanic Signature\n        </FormLabel>\n        <SignatureCanvas\n            penColor='green'\n            canvasProps={{width: 400, height: 80, className: \"canvas\" }}\n        />\n        </Grid>\n\n        <Grid container>\n        <Grid item xs={12}>\n            <Button>\n            Submit\n            </Button>\n        </Grid>\n        </Grid>\n    </div>\n    );\n}\n\nexport default withStyles(styles, { withTheme: true })(Form);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Form from './Form';\n\nconst drawerWidth = 240;\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass App extends React.Component {\n  state = {\n    mobileOpen: false,\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    const drawer = (\n      <div>\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {['New Submission', 'My Submissions', 'Templates'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['Account'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Pre Shift Pro\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={this.props.container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Form />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}